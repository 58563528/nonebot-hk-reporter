# syntax=docker/dockerfile:1.2
FROM python:3.10-slim
WORKDIR /app
RUN --mount=type=cache,target=/root/.cache/pip \
    python3 -m pip install poetry && poetry config virtualenvs.create false
RUN --mount=type=cache,target=/var/cache/apt \
  --mount=type=cache,target=/var/lib/apt \
    apt-get update && apt-get install -y xvfb fonts-noto-color-emoji ttf-unifont \
    libfontconfig1 libfreetype6 xfonts-cyrillic xfonts-scalable fonts-liberation \
    fonts-ipafont-gothic fonts-wqy-zenhei fonts-tlwg-loma-otf  \
    fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 \
    libcairo2 libcups2 libdbus-1-3 libdrm2 libegl1 libgbm1 libglib2.0-0 libgtk-3-0 \
    libnspr4 libnss3 libpango-1.0-0 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
    libxdamage1 libxext6 libxfixes3 libxrandr2 libxshmfence1
COPY ./pyproject.toml ./poetry.lock* ./bot.py /app/
RUN --mount=type=cache,target=/root/.cache/pypoetry \
    poetry add nonebot-plugin-sentry && \
    sed '/nonebot.load_builtin_plugins("echo")/a nonebot.load_plugin("nonebot_plugin_sentry")' -i bot.py
RUN --mount=type=cache,target=/root/.cache/pypoetry \
    poetry install --no-dev --no-root
RUN playwright install chromium
ADD src /app/src
RUN echo 'DATASTORE_DATA_DIR=/data' > .env
ENV HOST=0.0.0.0
CMD ["python", "bot.py"]

# vim: set ft=dockerfile:
